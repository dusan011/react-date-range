// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputRangeField tests Should parse input value to number 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <InputRangeField
    label="Input label"
    onBlur={[MockFunction]}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            3,
          ],
          Array [
            12,
          ],
          Array [
            0,
          ],
          Array [
            0,
          ],
          Array [
            0,
          ],
          Array [
            99999,
          ],
        ],
      }
    }
    onFocus={[MockFunction]}
    placeholder="-"
    styles={
      Object {
        "inputRange": "range",
        "inputRangeInput": "input",
        "inputRangeLabel": "label",
      }
    }
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": InputRangeField {
      "_reactInternalFiber": FiberNode {
        "_debugID": 59,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 58,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "label": "Input label",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          3,
                        ],
                        Array [
                          12,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          99999,
                        ],
                      ],
                    },
                    "onFocus": [MockFunction],
                    "placeholder": "-",
                    "styles": Object {
                      "inputRange": "range",
                      "inputRangeInput": "input",
                      "inputRangeLabel": "label",
                    },
                    "value": "",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="range"
                >
                  <input
                    class="input"
                    max="99999"
                    min="0"
                    placeholder="-"
                    value=""
                  />
                  <span
                    class="label"
                  >
                    Input label
                  </span>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "label": "Input label",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          3,
                        ],
                        Array [
                          12,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          99999,
                        ],
                      ],
                    },
                    "onFocus": [MockFunction],
                    "placeholder": "-",
                    "styles": Object {
                      "inputRange": "range",
                      "inputRangeInput": "input",
                      "inputRangeLabel": "label",
                    },
                    "value": "",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="range"
                >
                  <input
                    class="input"
                    max="99999"
                    min="0"
                    placeholder="-"
                    value=""
                  />
                  <span
                    class="label"
                  >
                    Input label
                  </span>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 60,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 61,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "input",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "className": "input",
              "max": 99999,
              "min": 0,
              "onBlur": [MockFunction],
              "onChange": [Function],
              "onFocus": [MockFunction],
              "placeholder": "-",
              "value": "",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "className": "input",
              "max": 99999,
              "min": 0,
              "onBlur": [MockFunction],
              "onChange": [Function],
              "onFocus": [MockFunction],
              "placeholder": "-",
              "value": "",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "span",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Input label",
                "className": "label",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "Input label",
                "className": "label",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <span
                class="label"
              >
                Input label
              </span>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "span",
              "updateQueue": null,
            },
            "stateNode": <input
              class="input"
              max="99999"
              min="0"
              placeholder="-"
              value=""
            />,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "input",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <input
                className="input"
                max={99999}
                min={0}
                onBlur={[MockFunction]}
                onChange={[Function]}
                onFocus={[MockFunction]}
                placeholder="-"
                value=""
              />,
              <span
                className="label"
              >
                Input label
              </span>,
            ],
            "className": "range",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <input
                className="input"
                max={99999}
                min={0}
                onBlur={[MockFunction]}
                onChange={[Function]}
                onFocus={[MockFunction]}
                placeholder="-"
                value=""
              />,
              <span
                className="label"
              >
                Input label
              </span>,
            ],
            "className": "range",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="range"
          >
            <input
              class="input"
              max="99999"
              min="0"
              placeholder="-"
              value=""
            />
            <span
              class="label"
            >
              Input label
            </span>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "label": "Input label",
          "onBlur": [MockFunction],
          "onChange": [MockFunction] {
            "calls": Array [
              Array [
                3,
              ],
              Array [
                12,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                99999,
              ],
            ],
          },
          "onFocus": [MockFunction],
          "placeholder": "-",
          "styles": Object {
            "inputRange": "range",
            "inputRangeInput": "input",
            "inputRangeLabel": "label",
          },
          "value": "",
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "label": "Input label",
          "onBlur": [MockFunction],
          "onChange": [MockFunction] {
            "calls": Array [
              Array [
                3,
              ],
              Array [
                12,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                99999,
              ],
            ],
          },
          "onFocus": [MockFunction],
          "placeholder": "-",
          "styles": Object {
            "inputRange": "range",
            "inputRangeInput": "input",
            "inputRangeLabel": "label",
          },
          "value": "",
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 58,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "label": "Input label",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          3,
                        ],
                        Array [
                          12,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          99999,
                        ],
                      ],
                    },
                    "onFocus": [MockFunction],
                    "placeholder": "-",
                    "styles": Object {
                      "inputRange": "range",
                      "inputRangeInput": "input",
                      "inputRangeLabel": "label",
                    },
                    "value": "",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="range"
                >
                  <input
                    class="input"
                    max="99999"
                    min="0"
                    placeholder="-"
                    value=""
                  />
                  <span
                    class="label"
                  >
                    Input label
                  </span>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "label": "Input label",
              "onBlur": [MockFunction],
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [
                    3,
                  ],
                  Array [
                    12,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    0,
                  ],
                  Array [
                    99999,
                  ],
                ],
              },
              "onFocus": [MockFunction],
              "placeholder": "-",
              "styles": Object {
                "inputRange": "range",
                "inputRangeInput": "input",
                "inputRangeLabel": "label",
              },
              "value": "",
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 56,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "label": "Input label",
                          "onBlur": [MockFunction],
                          "onChange": [MockFunction] {
                            "calls": Array [
                              Array [
                                3,
                              ],
                              Array [
                                12,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                0,
                              ],
                              Array [
                                99999,
                              ],
                            ],
                          },
                          "onFocus": [MockFunction],
                          "placeholder": "-",
                          "styles": Object {
                            "inputRange": "range",
                            "inputRangeInput": "input",
                            "inputRangeLabel": "label",
                          },
                          "value": "",
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "label": "Input label",
                    "onBlur": [MockFunction],
                    "onChange": [MockFunction] {
                      "calls": Array [
                        Array [
                          3,
                        ],
                        Array [
                          12,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          0,
                        ],
                        Array [
                          99999,
                        ],
                      ],
                    },
                    "onFocus": [MockFunction],
                    "placeholder": "-",
                    "styles": Object {
                      "inputRange": "range",
                      "inputRangeInput": "input",
                      "inputRangeLabel": "label",
                    },
                    "value": "",
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="range"
                >
                  <input
                    class="input"
                    max="99999"
                    min="0"
                    placeholder="-"
                    value=""
                  />
                  <span
                    class="label"
                  >
                    Input label
                  </span>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 14,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "onChange": [Function],
      "props": Object {
        "label": "Input label",
        "onBlur": [MockFunction],
        "onChange": [MockFunction] {
          "calls": Array [
            Array [
              3,
            ],
            Array [
              12,
            ],
            Array [
              0,
            ],
            Array [
              0,
            ],
            Array [
              0,
            ],
            Array [
              99999,
            ],
          ],
        },
        "onFocus": [MockFunction],
        "placeholder": "-",
        "styles": Object {
          "inputRange": "range",
          "inputRangeInput": "input",
          "inputRangeLabel": "label",
        },
        "value": "",
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "label": "Input label",
      "onBlur": [MockFunction],
      "onChange": [MockFunction] {
        "calls": Array [
          Array [
            3,
          ],
          Array [
            12,
          ],
          Array [
            0,
          ],
          Array [
            0,
          ],
          Array [
            0,
          ],
          Array [
            99999,
          ],
        ],
      },
      "onFocus": [MockFunction],
      "placeholder": "-",
      "styles": Object {
        "inputRange": "range",
        "inputRangeInput": "input",
        "inputRangeLabel": "label",
      },
      "value": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="range"
      >
        <input
          class="input"
          max="99999"
          min="0"
          placeholder="-"
          value=""
        />
        <span
          class="label"
        >
          Input label
        </span>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="input"
            max={99999}
            min={0}
            onBlur={[MockFunction]}
            onChange={[Function]}
            onFocus={[MockFunction]}
            placeholder="-"
            value=""
          />,
          <span
            className="label"
          >
            Input label
          </span>,
        ],
        "className": "range",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <input
            class="input"
            max="99999"
            min="0"
            placeholder="-"
            value=""
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "input",
            "max": 99999,
            "min": 0,
            "onBlur": [MockFunction],
            "onChange": [Function],
            "onFocus": [MockFunction],
            "placeholder": "-",
            "value": "",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
        Object {
          "instance": <span
            class="label"
          >
            Input label
          </span>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Input label",
            "className": "label",
          },
          "ref": null,
          "rendered": Array [
            "Input label",
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": InputRangeField {
        "_reactInternalFiber": FiberNode {
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 58,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="range"
                    >
                      <input
                        class="input"
                        max="99999"
                        min="0"
                        placeholder="-"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        Input label
                      </span>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "label": "Input label",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              3,
                            ],
                            Array [
                              12,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              99999,
                            ],
                          ],
                        },
                        "onFocus": [MockFunction],
                        "placeholder": "-",
                        "styles": Object {
                          "inputRange": "range",
                          "inputRangeInput": "input",
                          "inputRangeLabel": "label",
                        },
                        "value": "",
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="range"
                    >
                      <input
                        class="input"
                        max="99999"
                        min="0"
                        placeholder="-"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        Input label
                      </span>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "label": "Input label",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              3,
                            ],
                            Array [
                              12,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              99999,
                            ],
                          ],
                        },
                        "onFocus": [MockFunction],
                        "placeholder": "-",
                        "styles": Object {
                          "inputRange": "range",
                          "inputRangeInput": "input",
                          "inputRangeLabel": "label",
                        },
                        "value": "",
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "label": "Input label",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        3,
                      ],
                      Array [
                        12,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        99999,
                      ],
                    ],
                  },
                  "onFocus": [MockFunction],
                  "placeholder": "-",
                  "styles": Object {
                    "inputRange": "range",
                    "inputRangeInput": "input",
                    "inputRangeLabel": "label",
                  },
                  "value": "",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "label": "Input label",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        3,
                      ],
                      Array [
                        12,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        99999,
                      ],
                    ],
                  },
                  "onFocus": [MockFunction],
                  "placeholder": "-",
                  "styles": Object {
                    "inputRange": "range",
                    "inputRangeInput": "input",
                    "inputRangeLabel": "label",
                  },
                  "value": "",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "input",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": "input",
                "max": 99999,
                "min": 0,
                "onBlur": [MockFunction],
                "onChange": [Function],
                "onFocus": [MockFunction],
                "placeholder": "-",
                "value": "",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": "input",
                "max": 99999,
                "min": 0,
                "onBlur": [MockFunction],
                "onChange": [Function],
                "onFocus": [MockFunction],
                "placeholder": "-",
                "value": "",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 62,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "span",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Input label",
                  "className": "label",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "Input label",
                  "className": "label",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <span
                  class="label"
                >
                  Input label
                </span>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "span",
                "updateQueue": null,
              },
              "stateNode": <input
                class="input"
                max="99999"
                min="0"
                placeholder="-"
                value=""
              />,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "input",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <input
                  className="input"
                  max={99999}
                  min={0}
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  onFocus={[MockFunction]}
                  placeholder="-"
                  value=""
                />,
                <span
                  className="label"
                >
                  Input label
                </span>,
              ],
              "className": "range",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <input
                  className="input"
                  max={99999}
                  min={0}
                  onBlur={[MockFunction]}
                  onChange={[Function]}
                  onFocus={[MockFunction]}
                  placeholder="-"
                  value=""
                />,
                <span
                  className="label"
                >
                  Input label
                </span>,
              ],
              "className": "range",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="range"
            >
              <input
                class="input"
                max="99999"
                min="0"
                placeholder="-"
                value=""
              />
              <span
                class="label"
              >
                Input label
              </span>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "label": "Input label",
            "onBlur": [MockFunction],
            "onChange": [MockFunction] {
              "calls": Array [
                Array [
                  3,
                ],
                Array [
                  12,
                ],
                Array [
                  0,
                ],
                Array [
                  0,
                ],
                Array [
                  0,
                ],
                Array [
                  99999,
                ],
              ],
            },
            "onFocus": [MockFunction],
            "placeholder": "-",
            "styles": Object {
              "inputRange": "range",
              "inputRangeInput": "input",
              "inputRangeLabel": "label",
            },
            "value": "",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "label": "Input label",
            "onBlur": [MockFunction],
            "onChange": [MockFunction] {
              "calls": Array [
                Array [
                  3,
                ],
                Array [
                  12,
                ],
                Array [
                  0,
                ],
                Array [
                  0,
                ],
                Array [
                  0,
                ],
                Array [
                  99999,
                ],
              ],
            },
            "onFocus": [MockFunction],
            "placeholder": "-",
            "styles": Object {
              "inputRange": "range",
              "inputRangeInput": "input",
              "inputRangeLabel": "label",
            },
            "value": "",
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 58,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="range"
                    >
                      <input
                        class="input"
                        max="99999"
                        min="0"
                        placeholder="-"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        Input label
                      </span>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "label": "Input label",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              3,
                            ],
                            Array [
                              12,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              99999,
                            ],
                          ],
                        },
                        "onFocus": [MockFunction],
                        "placeholder": "-",
                        "styles": Object {
                          "inputRange": "range",
                          "inputRangeInput": "input",
                          "inputRangeLabel": "label",
                        },
                        "value": "",
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "label": "Input label",
                "onBlur": [MockFunction],
                "onChange": [MockFunction] {
                  "calls": Array [
                    Array [
                      3,
                    ],
                    Array [
                      12,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      0,
                    ],
                    Array [
                      99999,
                    ],
                  ],
                },
                "onFocus": [MockFunction],
                "placeholder": "-",
                "styles": Object {
                  "inputRange": "range",
                  "inputRangeInput": "input",
                  "inputRangeLabel": "label",
                },
                "value": "",
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 56,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 56,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="range"
                    >
                      <input
                        class="input"
                        max="99999"
                        min="0"
                        placeholder="-"
                        value=""
                      />
                      <span
                        class="label"
                      >
                        Input label
                      </span>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 14,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "label": "Input label",
                            "onBlur": [MockFunction],
                            "onChange": [MockFunction] {
                              "calls": Array [
                                Array [
                                  3,
                                ],
                                Array [
                                  12,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  0,
                                ],
                                Array [
                                  99999,
                                ],
                              ],
                            },
                            "onFocus": [MockFunction],
                            "placeholder": "-",
                            "styles": Object {
                              "inputRange": "range",
                              "inputRangeInput": "input",
                              "inputRangeLabel": "label",
                            },
                            "value": "",
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "label": "Input label",
                      "onBlur": [MockFunction],
                      "onChange": [MockFunction] {
                        "calls": Array [
                          Array [
                            3,
                          ],
                          Array [
                            12,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            0,
                          ],
                          Array [
                            99999,
                          ],
                        ],
                      },
                      "onFocus": [MockFunction],
                      "placeholder": "-",
                      "styles": Object {
                        "inputRange": "range",
                        "inputRangeInput": "input",
                        "inputRangeLabel": "label",
                      },
                      "value": "",
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="range"
                  >
                    <input
                      class="input"
                      max="99999"
                      min="0"
                      placeholder="-"
                      value=""
                    />
                    <span
                      class="label"
                    >
                      Input label
                    </span>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 14,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "label": "Input label",
                        "onBlur": [MockFunction],
                        "onChange": [MockFunction] {
                          "calls": Array [
                            Array [
                              3,
                            ],
                            Array [
                              12,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              0,
                            ],
                            Array [
                              99999,
                            ],
                          ],
                        },
                        "onFocus": [MockFunction],
                        "placeholder": "-",
                        "styles": Object {
                          "inputRange": "range",
                          "inputRangeInput": "input",
                          "inputRangeLabel": "label",
                        },
                        "value": "",
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "label": "Input label",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        3,
                      ],
                      Array [
                        12,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        99999,
                      ],
                    ],
                  },
                  "onFocus": [MockFunction],
                  "placeholder": "-",
                  "styles": Object {
                    "inputRange": "range",
                    "inputRangeInput": "input",
                    "inputRangeLabel": "label",
                  },
                  "value": "",
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "label": "Input label",
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction] {
                    "calls": Array [
                      Array [
                        3,
                      ],
                      Array [
                        12,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        0,
                      ],
                      Array [
                        99999,
                      ],
                    ],
                  },
                  "onFocus": [MockFunction],
                  "placeholder": "-",
                  "styles": Object {
                    "inputRange": "range",
                    "inputRangeInput": "input",
                    "inputRangeLabel": "label",
                  },
                  "value": "",
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "onChange": [Function],
        "props": Object {
          "label": "Input label",
          "onBlur": [MockFunction],
          "onChange": [MockFunction] {
            "calls": Array [
              Array [
                3,
              ],
              Array [
                12,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                0,
              ],
              Array [
                99999,
              ],
            ],
          },
          "onFocus": [MockFunction],
          "placeholder": "-",
          "styles": Object {
            "inputRange": "range",
            "inputRangeInput": "input",
            "inputRangeLabel": "label",
          },
          "value": "",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "label": "Input label",
        "onBlur": [MockFunction],
        "onChange": [MockFunction] {
          "calls": Array [
            Array [
              3,
            ],
            Array [
              12,
            ],
            Array [
              0,
            ],
            Array [
              0,
            ],
            Array [
              0,
            ],
            Array [
              99999,
            ],
          ],
        },
        "onFocus": [MockFunction],
        "placeholder": "-",
        "styles": Object {
          "inputRange": "range",
          "inputRangeInput": "input",
          "inputRangeLabel": "label",
        },
        "value": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="range"
        >
          <input
            class="input"
            max="99999"
            min="0"
            placeholder="-"
            value=""
          />
          <span
            class="label"
          >
            Input label
          </span>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="input"
              max={99999}
              min={0}
              onBlur={[MockFunction]}
              onChange={[Function]}
              onFocus={[MockFunction]}
              placeholder="-"
              value=""
            />,
            <span
              className="label"
            >
              Input label
            </span>,
          ],
          "className": "range",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <input
              class="input"
              max="99999"
              min="0"
              placeholder="-"
              value=""
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input",
              "max": 99999,
              "min": 0,
              "onBlur": [MockFunction],
              "onChange": [Function],
              "onFocus": [MockFunction],
              "placeholder": "-",
              "value": "",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
          Object {
            "instance": <span
              class="label"
            >
              Input label
            </span>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Input label",
              "className": "label",
            },
            "ref": null,
            "rendered": Array [
              "Input label",
            ],
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
